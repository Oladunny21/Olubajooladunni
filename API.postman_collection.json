{
	"info": {
		"_postman_id": "357ce41d-41f4-4c6e-93fe-876e19170e21",
		"name": "API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get To Do",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7e4521ba-1bb9-47c8-991b-56da578e8f71",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code name has OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{demoURL}}",
					"host": [
						"{{demoURL}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get single_Todo",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "39c6af0d-bfde-43c2-a136-a0442586f3ba",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches status\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"status\");\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{demoURL}}?todo_id=2",
					"host": [
						"{{demoURL}}"
					],
					"query": [
						{
							"key": "todo_id",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Post Create New Record",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c9f06e6a-c326-4a7e-aa0a-3294e10282ae",
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"pm.test(\"Body matches createdAt\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"createdAt\");\r",
							"});\r",
							"pm.test(\"Status code name has Created\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{URL}}",
					"host": [
						"{{URL}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post Graduate User Record",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cdf12f42-80a4-41ee-86d1-2e6662ceb66c",
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"pm.globals.set(\"variable_key\", \"variable_value\");\r",
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
							"    console.log(response.json());\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"var jsonObject = xml2Json(responseBody);\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{URL}}/2",
					"host": [
						"{{URL}}"
					],
					"path": [
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User Record",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "da4836ec-8266-42b0-92ea-7b3a46ac0fc8",
						"exec": [
							"pm.test(\"Status code is 204\", function() {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"pm.test(\"Content-Length is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Length\");\r",
							"});\r",
							"pm.test(\"Status code has No Content\", function () {\r",
							"    pm.response.to.have.status(\"No Content\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{URL}}/2/user/{id}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"2",
						"user",
						"{id}"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}